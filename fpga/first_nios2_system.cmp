	component first_nios2_system is
		port (
			clk_clk                             : in    std_logic                     := 'X';             -- clk
			reset_reset_n                       : in    std_logic                     := 'X';             -- reset_n
			grab_if_0_conduit_end_GSSHT         : in    std_logic                     := 'X';             -- GSSHT
			grab_if_0_conduit_end_GMODE         : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- GMODE
			grab_if_0_conduit_end_GCONT         : in    std_logic                     := 'X';             -- GCONT
			grab_if_0_conduit_end_GFMT          : in    std_logic                     := 'X';             -- GFMT
			grab_if_0_conduit_end_GFSTART       : in    std_logic_vector(22 downto 0) := (others => 'X'); -- GFSTART
			grab_if_0_conduit_end_GLPITCH       : in    std_logic_vector(22 downto 0) := (others => 'X'); -- GLPITCH
			grab_if_0_conduit_end_GYSS          : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- GYSS
			grab_if_0_conduit_end_GXSS          : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- GXSS
			grab_if_0_conduit_end_GACTIVE       : out   std_logic;                                        -- GACTIVE
			grab_if_0_conduit_end_GSPDG         : out   std_logic;                                        -- GSPDG
			grab_if_0_conduit_end_DEBUG_GRABIF1 : out   std_logic_vector(31 downto 0);                    -- DEBUG_GRABIF1
			grab_if_0_conduit_end_DEBUG_GRABIF2 : out   std_logic_vector(31 downto 0);                    -- DEBUG_GRABIF2
			grab_if_0_conduit_end_vdata         : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- vdata
			grab_if_0_conduit_end_gclk          : in    std_logic                     := 'X';             -- gclk
			new_sdram_controller_0_wire_addr    : out   std_logic_vector(11 downto 0);                    -- addr
			new_sdram_controller_0_wire_ba      : out   std_logic_vector(1 downto 0);                     -- ba
			new_sdram_controller_0_wire_cas_n   : out   std_logic;                                        -- cas_n
			new_sdram_controller_0_wire_cke     : out   std_logic;                                        -- cke
			new_sdram_controller_0_wire_cs_n    : out   std_logic;                                        -- cs_n
			new_sdram_controller_0_wire_dq      : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			new_sdram_controller_0_wire_dqm     : out   std_logic_vector(1 downto 0);                     -- dqm
			new_sdram_controller_0_wire_ras_n   : out   std_logic;                                        -- ras_n
			new_sdram_controller_0_wire_we_n    : out   std_logic;                                        -- we_n
			counter_1_conduit_end_count         : out   std_logic_vector(31 downto 0);                    -- count
			counter_1_conduit_end_clear         : in    std_logic                     := 'X';             -- clear
			counter_1_conduit_end_count_cmp     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- count_cmp
			counter_1_conduit_end_count_equal   : out   std_logic;                                        -- count_equal
			counter_1_conduit_end_enable        : in    std_logic                     := 'X';             -- enable
			counter_0_conduit_end_count         : out   std_logic_vector(31 downto 0);                    -- count
			counter_0_conduit_end_clear         : in    std_logic                     := 'X';             -- clear
			counter_0_conduit_end_count_cmp     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- count_cmp
			counter_0_conduit_end_count_equal   : out   std_logic;                                        -- count_equal
			counter_0_conduit_end_enable        : in    std_logic                     := 'X';             -- enable
			regfile_0_conduit_end_AVINTDIS      : out   std_logic;                                        -- AVINTDIS
			regfile_0_conduit_end_T1INTOVR      : out   std_logic;                                        -- T1INTOVR
			regfile_0_conduit_end_T1INTSTS      : out   std_logic;                                        -- T1INTSTS
			regfile_0_conduit_end_T0INTSTS      : out   std_logic;                                        -- T0INTSTS
			regfile_0_conduit_end_T1INTEN       : out   std_logic;                                        -- T1INTEN
			regfile_0_conduit_end_T0INTEN       : out   std_logic;                                        -- T0INTEN
			regfile_0_conduit_end_T1CNTEN       : out   std_logic;                                        -- T1CNTEN
			regfile_0_conduit_end_T0CNTEN       : out   std_logic;                                        -- T0CNTEN
			regfile_0_conduit_end_T1RST         : out   std_logic;                                        -- T1RST
			regfile_0_conduit_end_T0RST         : out   std_logic;                                        -- T0RST
			regfile_0_conduit_end_T0CNT         : out   std_logic_vector(31 downto 0);                    -- T0CNT
			regfile_0_conduit_end_T1CNT         : out   std_logic_vector(31 downto 0);                    -- T1CNT
			regfile_0_conduit_end_T0CMP         : out   std_logic_vector(31 downto 0);                    -- T0CMP
			regfile_0_conduit_end_T1CMP         : out   std_logic_vector(31 downto 0);                    -- T1CMP
			regfile_0_conduit_end_GP0           : out   std_logic_vector(31 downto 0);                    -- GP0
			regfile_0_conduit_end_GP1           : out   std_logic_vector(31 downto 0);                    -- GP1
			regfile_0_conduit_end_T0INT_set     : in    std_logic                     := 'X';             -- T0INT_set
			regfile_0_conduit_end_T1INT_set     : in    std_logic                     := 'X';             -- T1INT_set
			regfile_0_conduit_end_T0CNT_in      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- T0CNT_in
			regfile_0_conduit_end_T1CNT_in      : in    std_logic_vector(31 downto 0) := (others => 'X'); -- T1CNT_in
			regfile_0_conduit_end_avalon_inten  : in    std_logic                     := 'X'              -- avalon_inten
		);
	end component first_nios2_system;

