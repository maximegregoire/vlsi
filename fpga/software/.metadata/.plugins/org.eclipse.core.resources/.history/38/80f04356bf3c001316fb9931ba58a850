/*
 * nios2_isr_main.c
 *
 *  Created on: 2013-10-05
 *      Author: pwhite8
 */
#include "system.h"
#include "io.h"


#include <stdio.h>

#define HARDWARE 0
#define SOFTWARE 1

#define POLL 0
#define AVALON 1

#define INTCTL 	0x0
#define TCTL 	0x4
#define T0CNT	0x8
#define T1CNT	0xC
#define T0CMP	0x10
#define T1CMP	0x14
#define GP0		0x18
#define GP1		0x1C

#define LINE_WIDTH 0x10000

#define SECOND 0x2FAF08 //This value represents 1 second worth of counts of 16 clock pulses
//#define SECOND 0x1F
#define FREQUENCY 1000

#define CHECK_BIT(var,pos) 	((var) & (1<<(pos)))
#define SET_BIT(var,pos) 	(var |= (1U << pos))
#define CLEAR_BIT(var,pos) 	(var &= ~(1U << (pos)))

int main()
{
	int readdata = 0;
	int offset = 0;

	while (offset < 100)
	{
		IOWR_16DIRECT(NEW_SDRAM_CONTROLLER_0_BASE, offset * LINE_WIDTH, 0xCAFE);

		readdata = IORD_16DIRECT(NEW_SDRAM_CONTROLLER_0_BASE, offset * LINE_WIDTH LINE_WIDTH);

		offset++;
	}
	return 0;
}
